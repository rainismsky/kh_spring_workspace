package beauty.controller;

import java.util.List;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import beauty.model.ReviewDTO;
import beauty.service.ReviewDAO;

@Controller
@RequestMapping("/Review/*")
public class ReviewController {

	@Autowired // 빈 객체 자동 주입
	ReviewDAO reviewdao;

	// 1.게시글 목록
	@RequestMapping("/Review/list.Review")
	public ModelAndView list() throws Exception {
		List<ReviewDTO> list = reviewdao.listAll();

	// ModelAndView - 모델과 뷰
	ModelAndView mav = new ModelAndView();
	mav.setViewName("list.Review");// view를 list.Review로 설정
	mav.addObject("list",list);// 데이터 저장
	
	System.out.println("게시글 목록 출력 명령을 수행 합니다.");
	
	return mav; //list.Review로 List가 전달된다. 
	}

	// 2_1. 게시글 작성 화면
	// @RequestMapping("board/write.do")
	// value="",method="전송 방식"
	@RequestMapping(value = "write", method = RequestMethod.GET)
	public String write() {
		
		System.out.println("게시글 작성 화면 출력 명령을 수행 합니다.");
		
		return "write.Review"; // write.jsp 이동
	}
	
	// 2_2.게시글 작성 처리
	@RequestMapping(value = "insert", method = RequestMethod.POST)
	public String insert(@ModelAttribute ReviewDTO dto)throws Exception{
		
		reviewdao.create(dto);
		System.out.println("게시글 작성 처리 명령을 수행 합니다");
		return"redirect:list.Review";
	}
	
	
	 /* 3.게시글 상세 내용 조회,게시글 조회수 증가 처리
	  @RequestParam:get/post방식으로 전달된 변수 1개
	   Httpsession 세션 객체  */
	
	@RequestMapping(value = "view", method = RequestMethod.GET)
	public ModelAndView view(@RequestParam int rno, HttpSession session) throws Exception {
		// 조회수 증가 처리
		reviewdao.increaseView(rno);
		// 모델(데이터)+뷰(화면)를(을) 함께  전달하는 객체
		ModelAndView mav = new ModelAndView();
		// 뷰 이름
		mav.setViewName("view.Review");
		// 뷰로 전달할 데이터
		mav.addObject("dto", reviewdao.read(rno));
		
		System.out.println("게시글 조회 명령을 수행 합니다.");
		
		return mav;
	}
	
	/* 4.게시글 수정
	  	폼에서 입력한 내용들은 @ModelAttribute BoardDTO dto로 전달 */
	
	@RequestMapping(value = "update", method = RequestMethod.POST)
	public String update(@ModelAttribute ReviewDTO dto)throws Exception{
		reviewdao.update(dto);
	
		System.out.println("게시글 수정 명령을 수행 합니다.");
		
		return "redirect:list.Review";
	}
	
	
	//5. 게시글 삭제
	@RequestMapping("/delete")
	public String delete(@RequestParam("rno") int rno) throws Exception {
		reviewdao.delete(rno);
		
		System.out.println("게시글 삭제 명령을 수행 합니다.");
		
		return "redirect:list.Review";
	}
}